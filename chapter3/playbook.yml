---
- name: Installing docker
  hosts: "{{ target | default('localhost') }}"
  remote_user: "{{ user }}"
  connection: "{{ 'local' if target is not defined else 'ssh' }}"
  become: true

  vars:
    project_path: "/home/{{ user }}/project"

  tasks:
    - name: Setup Docker on debian
      when: ansible_os_family == "Debian" 
      block: 
        - name: Update apt packages
          ansible.builtin.apt:
            update_cache: true

        - name: Upgrade all packages
          ansible.builtin.apt:
            upgrade: safe

        - name: Install required packages
          ansible.builtin.apt:
            name:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg-agent
              - software-properties-common

        - name: Add GPG key
          ansible.legacy.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add docker repository to apt
          ansible.builtin.apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu bionic stable
            state: present

        - name: Install docker
          ansible.builtin.apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io

    - name: Install Docker on CentOS
      when: ansible_os_family == "RedHat"
      block:
        - name: Install required dependencies
          ansible.builtin.dnf:
            name:
              - yum-utils
              - device-mapper-persistent-data
              - lvm2
              - dnf-plugins-core
            state: present

        - name: Add Docker CE repository
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/centos/docker-ce.repo
            dest: /etc/yum.repos.d/docker-ce.repo
            mode: "0644"
            validate_certs: yes

        - name: Enable Docker CE repository
          ansible.builtin.ini_file:
            path: /etc/yum.repos.d/docker-ce.repo
            section: "docker-ce-stable"
            option: enabled
            value: "1"
            backup: yes

        - name: Install Docker packages
          ansible.builtin.dnf:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
            state: present
            update_cache: yes 

    - name: Check docker is active
      ansible.legacy.service:
        name: docker
        state: started
        enabled: true

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to group Docker
      ansible.builtin.user:
        name: "{{ user }}"
        groups: docker
        append: true

    - name: Verify Docker installation
      ansible.builtin.command: docker --version
      register: docker_check
      changed_when: false
      failed_when: docker_check.rc != 0

    - name: Create app directory
      ansible.builtin.file:
        path: "{{ project_path }}"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0755"

    - name: Copy multiple items
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0655"
      loop:
        - src: "{{ playbook_dir }}/Dockerfile"
          dest: "{{ project_path }}/Dockerfile"
        - src: "{{ playbook_dir }}/script.py"
          dest: "{{ project_path }}/script.py"

    - name: Build Docker image
      community.docker.docker_image:
        name: http_app
        build:
          path: "{{ project_path }}"
          dockerfile: Dockerfile
        source: build
        state: present

    - name: Run Docker container
      community.docker.docker_container:
        name: http_app_container
        image: http_app
        state: started
        restart_policy: false
        detach: false

    - name: Get container logs
      ansible.builtin.command: docker logs http_app_container
      register: container_logs
      changed_when: false

    - name: Display container logs
      ansible.builtin.debug:
        var: container_logs.stdout_lines
